# core.test
# (c)2015 by Chris Dickens
#
# Tests Glue core functionality (with GlueEval)
#
# Does not test plugin support - use one of the plugin tests for that
#

#--------------
# assignment, echo (with inbuilt join)
#   X=2, Y=4
#   X=4, Y=5
#   Z=4

  <2 >X
  <4 >Y
  <"|nX=" echo; <X echo; <", Y=" echo; <Y echo
  <Y >X
  <5 >Y
  <"|nX=" echo; <X echo; <", Y=" echo; <Y echo
  getVar("X") >Z
  <"|nZ=" echo; <Z echo
  <"|n--|n" echo
  
  
#--------------
# maths
#   10 5 6 3 -3 -1
  
  <-10 >X
  <X add(20) >X             <" " echo; <X echo
  <X divideBy(2) >X         <" " echo; <X echo
  <X decreaseBy(-1) >X      <" " echo; <X echo
  <X multiplyBy(0.5) >X     <" " echo; <X echo
  <X subtract(6) >X         <" " echo; <X echo
  <X modDivBy(2) >X         <" " echo; <X echo
  <"|n--|n" echo
  
#--------------
# strings
#   hello,world! | 6 | 3 -1 3

  <"world!hello,test" >X
  <X cropTo(6) >W
  <X cropFrom(6), cropTo(6) >H
  <H append(W) append(" |b ") echo
  <W getLength >L
  <L echo
  <" |b " echo

  <W findIndexOf("l") >X
  <W findIndexOf("L") >Y
  <W findAnyCaseIndexOf("L") >Z
  <X echo; <" " echo; <Y echo; <" " echo; <Z echo
  <"|n--|n" echo

    
#--------------    
# setPart, getPart, setParts and getParts
#   Chris, 36
#   (these parts as a single string per line, the order is not important: 
#     FtitleCMr FfnameFChris FsnameHDickens DageC36 D123D456
#     FtitleCMr FsnameHDickens)
#

  newBundle >X
  <"Mr" >X'title
  <"Chris" >X'fname
  <"Dickens" >X'sname
  <36 >X'age
  <456 >X'123

  <X'fname >FNAME
  <FNAME echo; <", " echo, <X'age echo
  <X newBundle("title/sname") >Y
  <"|n" echo; <X echo 
  <"|n" echo; <Y echo
  <"|n--|n" echo

#--------------
# goto, gosub and conditional (also boolean: 0 is false, anything else is true)
#   10 9 8 7 6 4 5 3 2 1 
  <10 >X
  :LOOP_TEST_START
    gosub(:LOOP_TEST:ECHO)
    <X subtract(1) >X
  <X isNot(0) ? goto(:LOOP_TEST_START)
  goto(:LOOP_TEST_END)
  
  :LOOP_TEST:ECHO
    <X echo; <" " echo
    return
    
  :LOOP_TEST_END
    <"|n--|n" echo
  
#--------------
# testIf
#   110011 110011 1001 0 1  
    <5 >X
    <10 >Y
    <X is(5), echo
    <X isLessThan(Y), echo
    <X isGreaterThan(Y), echo
    <X isEqualTo(Y), echo
    <X isLessThanOrEqualTo(5), echo
    <Y isGreaterThanOrEqualTo(10), echo
    <" " echo
    
    <X is==(5), echo
    <X is<(Y), echo
    <X is>(Y), echo
    <X is=(Y), echo
    <X is<=(5), echo
    <Y is>=(10), echo
    <" " echo
    
    <"HI" >A
    <A is("HI"), echo
    <A isNot("HI"), echo
    <A is("HELLO"), echo
    <A isNot("HELLO") >Z
    <Z echo
    <" " echo
    
    <Z not >Z, echo
    <" " echo
    <Z not, echo
    <"|n--|n" echo
  
  
#--------------
#  Flow doesn't actually support while or until so we use what we have here...
# while/until, increase and testIf'<
#   0 1 2 3 4
#   0 1 2 3 4 5
  <0 >X
  :WHILE_TEST
    # these two lines could be: <X echo, add(1) >X; <" " echo
    <X echo, <" " echo
    <X add(1) >X
    # keep going while X < 5
    <X is<(5) >CONT
  <CONT true? goto(:WHILE_TEST)  
  <"|n" echo
  
  <0 >X
  :UNTIL_TEST
    <X echo, <" " echo
    <X add(1) >X
    # stop if X > 5
  <X isGreaterThan(5) false? goto(:UNTIL_TEST)
  
  <"|n--|n" echo
  
  <"|n|n ** DONE **" echo
  