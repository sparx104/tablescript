# ExtPlatform (platform.) Test Suite
# (c)2015 by Chris Dickens
#
# MIT License
#

#--------------
# environment variables
#   passed

  platform.setEnvironmentVariable "test_var" to "passed"
  X = platform.getEnvironmentVariable "test_var"
  echo X
  echo "\n--\n"
  

#--------------
# date serial
#   (today's date as "YYYYMMDDHHIISS")

  X = platform.getDateSerial
  echo X
  echo "\n--\n"
  
#--------------
# random number
#   random numbers: (5 random numbers 10 >= n > 20)

  echo "random numbers: "
  ITR = @ 5
  :RND:LOOP
    Y = platform.getRandomNumberFrom 10 upTo 20
    echo Y & " "
    ITR = decrease ITR by 1
  (ITR) goto :RND:LOOP
  echo "\n--\n"
  
#--------------
# get platform ID
#   (the platform ID, some are: js, js/chrome_app, php, windows, linux, android)

  X = platform.getId
  print X
  echo "\n--\n"
  

#--------------
# file support
#   testing
#   Count: (number of files in the next list)
#   (a list of one or more files, "platform_test.txt" must be one)

  N = @ "platform_test.txt"
  OK = platform.writeToFile N value "testing"
  FAILED = not OK
  (FAILED) echo "!! Unable to write file\n"
  (FAILED) goto :SKIP_FILE_TEST
  
  X = platform.readFromFile N
  echo X & "\n"
  LIST = platform.listFilesIn ""
  COUNT = getPart "count" from LIST
  echo "Count: " & COUNT && "\n"
  INDEX = @ 0
  :FILE_LIST_LOOP
    COUNT = decrease COUNT by 1
    F = getPart COUNT from LIST
    echo ">>" & INDEX && ": " &&& F &&&& "\n"
    INDEX = increase INDEX by 1
    CONT = testIf COUNT > 0
  (CONT) goto :FILE_LIST_LOOP
  :SKIP_FILE_TEST
  echo "\n--\n"

#--------------
# config file support
#   Chris Dickens, 36

  N = @ "platform_test.txt"
  OK = platform.writeToFile N value "age=36\n\n[name]\nf=Chris\ns=Dickens"
  FAILED = not OK
  (FAILED) echo "!! Unable to write file\n"
  (FAILED) goto :SKIP_CONFIG_TEST
  
  Z = platform.loadConfigFrom N
  EMPTY = testIf Z is ""
  (EMPTY) echo "!! Failed to read config\n"
  (EMPTY) goto :SKIP_CONFIG_TEST
  
  FN = getPart "name.f" from Z
  SN = getPart "name.s" from Z
  A = getPart "age" from Z
  
  echo FN & " " && SN &&& ", " &&&& A
  :SKIP_CONFIG_TEST
  echo "\n--\n"

#--------------
# exec, both of valid app and missing one (with error handler).  Also that
# exec should stop the script
#   Exec1: !dlrow ,olleH
#   Exec2: Failed to execute - this is a PASS
#

  :EXEC1
  platform.exec "platform-test.exe" withArgs "Hello, world!" onDoneGoto :EXEC1:OK onErrorGoto :EXEC1:ERR
  stop
  
  :EXEC1:OK
    X = platform.readFromFile "exec.txt"
    echo "Exec1: " & X && "\n"
    goto :EXEC2
    
  :EXEC1:ERR
    echo "Exec1: ** FAILED **\n"
    goto :EXEC2
    
  
  :EXEC2
  platform.exec "missing-app.exe" withArgs "" onDoneGoto :EXEC2:OK onErrorGoto :EXEC2:ERR
  # stop - exec should stop, we'll not do it manually to test this
  
  :EXEC2:OK
    echo "Exec2: exec responded with OK or fell through, this FAILS this test\n"
    goto :EXEC_DONE
    
  :EXEC2:ERR
    echo "Exec2: Failed to execute - this is a PASS\n"
    goto :EXEC_DONE
  
  :EXEC_DONE
  echo "\n--\n"

#--------------
# browseto
#   (google.com should open - it is valid to show an error message and continue,
#   if browsing would make no sense/is unavailable)
#

  platform.browseTo "http://www.google.com"
  